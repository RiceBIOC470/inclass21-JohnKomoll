%In class 21

%GB comments
1 100
2 100
overall 100


% 1. Consider the system we discussed in class for a gene which is produced
% and degraded: dx/dt = k - d*x. Now consider that this gene turns on a
% second gene y, which also degrades so that its equation is 
% dy/dt = k2*x - d2*y. Choose some values for k,d,k2, and d2 and run a
% numerical simulation of this system for the case where both genes start
% out off ( x(0) = 0 and y(0) = 0). Plot the value of x and y in time and 
% explain your results. 

% Give integration parameters
interval = [0 10];
genes = [0; 0];

% Integrate over time, using rate functions defined below
sol1 = ode23(@rate1, interval, genes);

% Plot solutions for gene quantities
plot(sol1.x, sol1.y(1,:), 'g.-')
hold on
plot(sol1.x, sol1.y(2,:), 'r.-')
legend('Gene X', 'Gene Y', 'Location', 'Best')
ylabel('Gene Quantity')
xlabel('Time')
title('Change in Genes X and Y Over Time')

% Species x is generated at a basal rate, but once its concentration gets
% large, its degradation rate increases. This pushes its concentration to a
% steady solution where the basal production and degradation are equal.
% 
% Species y is generated by the presence of x, and is thus slowly generated
% at first, when x is low. The rate of generation of y increases along with
% x. However, once y becomes large, its degradation rate increases. This
% also pushes the concentration of y to a stable solution, where the
% generation of y by steady state x is equal to the degradation of y.

% 2. Consider the following model: 
% dx/dt = y
% dy/dt = (1-x^2)*y - x
% write code that simulates this system for several different starting
% values of x and y. Plot the results and comment on them. 

% Give initial values
start1 = [0; 0];
start2 = [2; 2];
start3 = [10; 1];
start4 = [4; 25];

% Solve for all initial values defined
sol2 = ode23(@rate2, interval, start1);
sol3 = ode23(@rate2, [0 30], start2);
sol4 = ode23(@rate2, interval, start3);
sol5 = ode23(@rate2, interval, start4);


% Plot all profiles based on different initial guesses
figure
plot(sol2.x, sol2.y(1,:), 'g.-')
hold on
plot(sol2.x, sol2.y(2,:), 'r.-')
title('Given Model for Initial Guess [0, 0]')
xlabel('t')
ylabel('y or x')
legend('x', 'y')
figure
plot(sol3.x, sol3.y(1,:), 'g.-')
hold on
plot(sol3.x, sol3.y(2,:), 'r.-')
title('Given Model for Initial Guess [2, 2]')
xlabel('t')
ylabel('y or x')
legend('x', 'y')
figure
plot(sol4.x, sol4.y(1,:), 'g.-')
hold on
plot(sol4.x, sol4.y(2,:), 'r.-')
title('Given Model for Initial Guess [10, 1]')
xlabel('t')
ylabel('y or x')
legend('x', 'y')
figure
plot(sol5.x, sol5.y(1,:), 'g.-')
hold on
plot(sol5.x, sol5.y(2,:), 'r.-')
title('Given Model for Initial Guess [4, 25]')
xlabel('t')
ylabel('y or x')
legend('x', 'y')

% A trivial solution is found when both initial values are 0, because each
% rate depends only on the concentrations of existing species. Therefore,
% the x and y profiles starting at [0, 0] will stay at these values.
% When each variable starts at the same value (in this case, [2, 2]), an
% unstable solution is found. The variables x and y oscillate irregularly
% towards and away from their initial value. There is no steady state. This
% is because when one rate is large, the other becomes small, and vice
% versa. There is no case where both rates become small together.
% When x starts much larger than y, the x and y profiles do not change much
% over time. This is because each rate begins as relatively small (y is
% small and (1 - x^2) is small). There is not a very interesting trend, and
% steady state values take a very long time to reach.
% When y starts much larger than x, the x and y profiles change rapidly at
% early t values and quickly reach a steady state value. This is because
% the initial rates are very large (y is large and (1 - x^2)*y is large).
% After a short t, the x and y profiles do not change much because a steady
% state is reached and the rates become small.

% FUNCTIONS %

% Part 1
function dydx = rate1( tt, genes )

% Give rate constants
k = 0.01;
d = 1;
k2 = 3;
d2 = 1;

% Calculate rate
dydx = [k - d .* genes(1); k2 .* genes(1) - d2 .* genes(2)];

end

% Part 2
function dydx = rate2( tt, var )

% Calculate rates
dydx = [var(2); (1-(var(1))^2)*var(2) - var(1)];

end
